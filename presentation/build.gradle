apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//androidExtensions {
//    experimental = true
//}


android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]

        applicationId globalConfiguration["androidApplicationId"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
        testApplicationId globalConfiguration["testApplicationId"]

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    def appDependencies = rootProject.ext.mainApp
    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
    def devDependencies = rootProject.ext.dev

    implementation project(':data')
    implementation project(':databoundary')
    implementation project(':domain')


    //Compile time dependencies
    kapt appDependencies.daggerCompiler
    kapt appDependencies.daggerAndroidProcessor
    kapt appDependencies.aacCompiler
    compileOnly appDependencies.javaxAnnotation
    compileOnly appDependencies.javaxInject

    //Application dependencies
    implementation appDependencies.appCompat
    implementation appDependencies.ktx
    implementation appDependencies.constraintLayout
    implementation appDependencies.design
    implementation appDependencies.rxJava
    implementation appDependencies.rxAndroid
    implementation appDependencies.rxKotlin
    implementation appDependencies.dagger
    implementation appDependencies.daggerSupport
    implementation appDependencies.androidAnnotations
    implementation appDependencies.aacExtensions
    implementation appDependencies.viewModel
    implementation appDependencies.liveData
    implementation appDependencies.aacPaging
    implementation appDependencies.roomRuntime
    implementation appDependencies.roomRxJava
    implementation appDependencies.aacNavigationFragment
    implementation appDependencies.aacNavigationUi

    //Unit/Integration tests dependencies
    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.mockito
    testImplementation unitTestDependencies.aacCoreTest

    //Acceptance tests dependencies
    androidTestImplementation acceptanceTestDependencies.testRunner
    androidTestImplementation acceptanceTestDependencies.testRules
    androidTestImplementation acceptanceTestDependencies.espressoCore
    androidTestImplementation acceptanceTestDependencies.espressoIntents
    androidTestImplementation acceptanceTestDependencies.androidAnnotations
    androidTestImplementation acceptanceTestDependencies.aacNavigationTesting

    //Development dependencies
    debugImplementation devDependencies.leakCanaryDebug
    releaseImplementation devDependencies.leakCanaryRelease
}

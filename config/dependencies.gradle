ext {

    //Android
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 27
    androidCompileSdkVersion = 27

    //Versions

    //lib
    supportLibVersion = '27.1.0'
    constraintLayoutVersion = '1.0.2'
    daggerVersion = '2.15'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    glideVersion = '4.7.0'
    rxJavaVersion = '2.1.10'
    rxKotlinVersion = '2.1.0'
    rxAndroidVersion = '2.0.2'
    retrofit2rxJava2Version = '1.0.0'
    retrofit2Version = '2.4.0'
    AAVersion = '4.4.0'

    //test
    jUnitVersion = '4.12'
    espressoVersion = '3.0.1'
    runnerVersion = '1.0.1'
    mockitoVersion = '1.10.19'

    //dev
    leakCanaryVersion = '1.5.4'

    mainApp = [
            kotlin                  :    "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlin_version}",
            appCompat               :    "com.android.support:appcompat-v7:${supportLibVersion}",
            design                  :    "com.android.support:design:${supportLibVersion}",
            constraintLayout        :    "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",
            glide                   :    "com.github.bumptech.glide:glide:$glideVersion",
            dagger                  :    "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler          :    "com.google.dagger:dagger-compiler:${daggerVersion}",
            rxJava                  :    "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid               :    "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxKotlin                :    "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            javaxAnnotation         :    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject             :    "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations      :    "org.androidannotations:androidannotations-api:${AAVersion}",
            retrofit2               :    "com.squareup.retrofit2:retrofit:${retrofit2Version}",
            retrofit2GsonConverter  :    "com.squareup.retrofit2:converter-gson:${retrofit2Version}",
    ]

    unitTesting = [
            kotlin                  :   "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            kotlinTest              :   "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            junit                   :   "junit:junit:${jUnitVersion}",
            mockito                 :   "org.mockito:mockito-core:${mockitoVersion}",
    ]

    acceptanceTesting = [
            testRunner              :   "com.android.support.test:runner:$runnerVersion",
            testRules               :   "com.android.support.test:rules:$runnerVersion",
            espressoCore            :   "com.android.support.test.espresso:espresso-core:$espressoVersion",
            espressoIntents         :   "com.android.support.test.espresso:espresso-intents:$espressoVersion",
            androidAnnotations      :   "com.android.support:support-annotations:$supportLibVersion",
    ]

    dev = [
            leakCanaryDebug         :   "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakCanaryRelease       :   "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
    ]
}